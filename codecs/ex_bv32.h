/*! \file
 *
 * \brief 16-bit raw data
 */

#include "asterisk/format_cache.h"      /* for ast_format_bv32      */
#include "asterisk/frame.h"             /* for ast_frame, etc       */

static uint8_t ex_bv32[] = {
	0x1d, 0x38, 0x77, 0x9b, 0x49, 0x14, 0x89, 0x27, 0x8e, 0x79, 0x9c, 0xf5, 0x25, 0xc7, 0x0f, 0x7f,
	0x2c, 0x25, 0x73, 0xb7, 0x69, 0x07, 0xcc, 0xc5, 0xec, 0xb0, 0xc6, 0x0c, 0xac, 0xd8, 0xcb, 0xb1,
	0x53, 0x58, 0x30, 0x20, 0x4c, 0x3a, 0xc2, 0xa3, 0xaf, 0x59, 0xa2, 0xf8, 0x6d, 0x02, 0x25, 0x1c,
	0x7b, 0x7a, 0xe9, 0xdf, 0x33, 0x74, 0x11, 0x5c, 0xad, 0x92, 0xc0, 0xed, 0x59, 0xac, 0xf2, 0x99,
	0x8c, 0xb1, 0xe9, 0xe9, 0x82, 0x66, 0xa0, 0x6b, 0x9e, 0xba, 0xe4, 0x5d, 0x0b, 0x8d, 0x33, 0xa5,
};

static struct ast_frame *bv32_sample(void)
{
	static struct ast_frame f = {
		.frametype = AST_FRAME_VOICE,
		.datalen = sizeof(ex_bv32),
		.samples = BV32_SAMPLES,
		.mallocd = 0,
		.offset = 0,
		.src = __PRETTY_FUNCTION__,
		.data.ptr = ex_bv32,
	};

	f.subclass.format = ast_format_bv32;

	return &f;
}
